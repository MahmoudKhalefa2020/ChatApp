@model ImoApp.ViewModel.UserLogin

@{

    ViewData["Title"] = "Login";
    Layout = null;


}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>

    <link rel="stylesheet" href="/lib/twitter-bootstrap/css/bootstrap.min.css">
    
</head>
<body>


    <nav class="navbar navbar-expand-lg bg-light">
        <div class="container-md">
            <a class="navbar-brand" asp-action="Index" asp-controller="Home">Imo App</a>
        </div>

    </nav>
    
    <div class="container">
        <div class="row">
            <div class="col-md-4 m-auto">
                <h1 class="text-center  ">Login</h1>
                <form asp-action="Login">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="UserName" class="control-label"></label>
                        <input asp-for="UserName" class="form-control" />
                        <span asp-validation-for="UserName" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Password" class="control-label"></label>
                        <input asp-for="Password" class="form-control" />
                        <span asp-validation-for="Password" class="text-danger"></span>
                    </div>
                    <div class="form-group form-check">
                        <label class="form-check-label">
                            <input class="form-check-input" asp-for="RememberMe" /> @Html.DisplayNameFor(model => model.RememberMe)
                        </label>
                    </div>
                    <div class="form-group d-grid">
                        <button type="submit" class="btn btn-primary">Login</button>
                    </div>
                </form>
            </div>

        </div>

    </div>

</body>
</html>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
